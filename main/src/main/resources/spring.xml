<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.zbkblog" />

    <!-- 解决使用@ResposenBody返回中文乱码和返回Map错误问题 -->
    <!-- DefaultAnnotationHandlerMapping 和 AnnotationMethodHandlerAdapter 的使用已经过时！
        spring 3.1 开始应该用
        RequestMappingHandlerMapping 来替换 DefaultAnnotationHandlerMapping，
        RequestMappingHandlerAdapter 来替换 AnnotationMethodHandlerAdapter。 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter"/>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- rest json related... start -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven />


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <!--<mvc:resources mapping="/bootstrap/**" location="/bootstrap/" />-->
    <!--<mvc:resources mapping="/bootstraptable/**" location="/bootstraptable/" />-->
    <!--<mvc:resources mapping="/img/**" location="/img/" />-->
    <!--<mvc:resources mapping="/js/**" location="/js/" />-->
    <!--<mvc:resources mapping="/css/**" location="/css/" />-->
    <mvc:resources mapping="/static/**" location="/static/" />
    <mvc:resources mapping="/images/**" location="/images/" />

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 指定前缀，所在目录，起点/为webroot -->
        <property name="prefix" value="/WEB-INF/jsp/">
        </property>
        <!-- 指定后缀扩展名 -->
        <property name="suffix" value=".jsp">
        </property>
    </bean>

    <!-- 1定义dbcp数据库连接池 -->
    <bean id="dbcp" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
        <property name="driverClassName"
                  value="com.mysql.jdbc.Driver"></property>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/myblog?user=root&amp;password=root&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false"></property>
    </bean>
    <!-- 2创建SqlSessionFactory -->
    <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dbcp">
        </property>
        <!-- 加载mapper目录下所有的SQL定义文件 -->
        <property name="mapperLocations"
                  value="classpath:com/zbkblog/mapper/*.xml">
        </property>
    </bean>
    <!-- 3定义MapperScannerConfigurer，将mapper(Dao)接口生成实现对象
        使用接口名首字母小写做对象的id，所以要使用就直接使用接口名首字母小写就行 -->
    <bean id="mapperScanner"
          class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 3.1注入SqlSessionFactory -->
        <property name="sqlSessionFactory" ref="ssf">
        </property>
        <!-- 3.2注入mapper接口所在位置,将dao包下所有接口生成实现对象(和SQL定义文件对应的Dao接口) -->
        <property name="basePackage" value="com.zbkblog.dao">
        </property>
    </bean>

</beans>